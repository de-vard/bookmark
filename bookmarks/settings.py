"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from django.urls import reverse_lazy

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9)_^00zo_#jk)qt@-5&4$-hcpzrylze6td=k*=g5e+(mzpp6we'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if DEBUG:
    import mimetypes

    mimetypes.add_type('application/javascript', '.js', True)
    mimetypes.add_type('text/css', '.css', True)

ALLOWED_HOSTS = ['mysite.com', 'localhost', '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    # local
    'account.apps.AccountConfig',  # ставим первым, что бы отрабатывали свои шаблоны аутентификации, а не содержащиеся в
    # django.contrib.admin.

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # для социальной аутентификации
    'social_django',

    # Отладочный инструмент Django Debug Toolbar
    'debug_toolbar',

    # Django Extensions — это набор пользовательских расширений для Django Framework.
    'django_extensions',

    # приложение для формирования миниатюр изображений
    'easy_thumbnails',

    # local
    'images.apps.ImagesConfig',
    'actions.apps.ActionsConfig',
]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',  # Отладочный инструмент Django Debug Toolbar
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'dashboard'  # перенаправлять пользователя после успешного входа
LOGIN_URL = 'login'  # перенаправлять пользователя, чтобы зарегистрировать его
LOGOUT_URL = 'logout'  # адрес, на который следует перенаправлять пользователя, чтобы зарегистрировать его выход

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Эти настройки обеспечат Django возможность управлять закачиванием файлов на сайт и раздачей медиафайлов.
MEDIA_URL = 'media/'  # базовый URL-адрес, используемый для раздачи медиафайлов, закачанных пользователями на сайт
MEDIA_ROOT = BASE_DIR / 'media'  # это локальный путь, где находятся медиафайлы

# Бэкенда аутентификация
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # стандартная аутентификация Django пользователя
    'account.authentication.EmailAuthBackend',  # аутентификация по Email пользователя, которую мы сами написали
    'social_core.backends.google.GoogleOAuth2',  # аутентификации с использованием учетной записи Google
]

# ключи Your Client ID и Your Client Secret для входа и регистрации через гугл
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '112045421298-4a53vruln1c9pdjmcuh1vem72bdbm2b3.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'

SOCIAL_AUTH_PIPELINE = [
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'account.authentication.create_profile',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
]

# способом указания URL-адреса для модели
ABSOLUTE_URL_OVERRIDES = {
    'auth.user': lambda u: reverse_lazy('user_detail', args=[u.username])
}

# Django Debug Toolbar
INTERNAL_IPS = [
    '127.0.0.1',
]

# настройки для Redis
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0
